function blinks = proc_echo(s)

fd = 80000; % частота дискретизации
fs = 20000; % частота сигнала
c = 1500; % скорость звука в воде
d = 0.03; % расстояние между приёмниками

fl = fft(s(1,:)); % перевод сигнала с левого приемника в частотуную область (преобразование фурье)
fr = fft(s(2,:)); % перевод сигнала с правого приемника в частотуную область (преобразование фурье)

n1 = length(fl) / fd * (fs - 1000); % вычисляем нижную частоту полосы пропускания
n2 = length(fl) / fd * (fs + 1000); % вычисляем верхнюю частоту полосы пропускания

fl(1:n1) = 0; % обнуляем значения ниже нижней частоты полосы пропускания для левого канала (полосовой фильтр)
fl(n2:end) = 0; % обнуляем значение выше верхней частоты полосы пропускания для левого канала (полосовой фильтр)
fr(1:n1) = 0; % обнуляем значения ниже нижней частоты полосы пропускания для правого канала (полосовой фильтр)
fr(n2:end) = 0; % обнуляем значение выше верхней частоты полосы пропускания для правого канала (полосовой фильтр)

sl = ifft(fl); % переход обратно, во временную область для левого канала (обратное преобразование Фурье)
sr = ifft(fr); % переход обратно, во временную область для правого канала (обратное преобразование Фурье)

sigma = 5*sqrt( sum(abs(sl).^2) / length(sl) ); % вычисляем пороговое значение для определения бликов
[peaks, coords] = findpeaks(abs(sl), 'MINPEAKHEIGHT', sigma, 'NPEAKS', 20); % вычисляем блики в лигнале

distance = coords / fd * c; % вычисление 

phi = angle(sr(coords)) - angle(sl(coords));
phi = angle( exp( 1i*phi ) );
ku = asind(phi*c/(2*pi*fs*d));

blinks = [distance; ku];
